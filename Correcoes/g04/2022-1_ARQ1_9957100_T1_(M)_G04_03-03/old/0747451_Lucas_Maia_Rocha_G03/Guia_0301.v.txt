/*
matricula: 747451 - aluno: Lucas Maia Rocha
*/

/* 01 - determinar os complementos para os valores e as quantidades de bits indicadas.) 

a- C1,6(1011(2)) = X(2)

	X(2) = C1(001011(2)) = 110100(2)

b- C1,8(110011(2)) = X(2)

	X(2) = C1(00001010(2)) = 11110101(2)

c- C2,6(110011(2)) = X(2)

	X(2) = C1(+6) = C1(110011(2)) = 001100(2)   C2 = 001100 + 1 => X2 = 1101(2)

d- C2,7(10111(2)) = X(2) 
	
	X(2) = C1(+7) = C1(0010111(2)) = 1101000(2)   C2 = 110100 + 1 => X2 = 1101001

e- C2,8(110101(2)) = X(2) C1(+8) = C1 (00110101(2)) = 11001010(2)   C2 = 11001010 + 1 => X2 = 11001011

*/

/*
Guia_0301
*/
module Guia_0301;

// define data
reg [7:0] a = 8'b000_1010 ; // binary
reg [6:0] b = 8'b000_101 ; // binary
reg [5:0] c = 8'b001_01 ; // binary
reg [7:0] d = 0; // binary
reg [6:0] e = 0; // binary
reg [5:0] f = 0; // binary

// actions
initial

begin : main
$display ( "Guia_0301 - Tests" );

//A
c = 8'b1011;
f = ~c+1;
$display ( "a = %6b -> C1(c) = %6b -> C2(c) = %6b", c, ~c, f );

//B
a = 8'b1010;
d = ~a+1;
$display ( "b = %8b -> C1(a) = %8b -> C2(a) = %8b", a, ~a, d );

//C
c = 8'b110011;
f = ~c+1;
$display ( "c = %6b -> C1(c) = %6b -> C2(c) = %6b", c, ~c, f );

//D
b = 8'b10111;
e = ~b+1;
$display ( "d = %7b -> C1(b) = %7b -> C2(b) = %7b", b, ~b, e );

//E
a = 8'b110101;
d = ~a+1;
$display ( "e = %8b -> C1(a) = %8b -> C2(a) = %8b", a, ~a, d );

end

endmodule